buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "com.gradle.publish:plugin-publish-plugin:0.9.1"
	}
}

apply plugin: "com.gradle.plugin-publish"
apply plugin: 'groovy'
apply plugin: 'idea'

ext {
    jettyVersion = '9.2.3.v20140905'
}

repositories {
    mavenCentral()
}

group = 'com.dsvdsv.gradle.plugin'
version = '1.5-SNAPSHOT'


compileGroovy.groovyOptions.configurationScript = file('groovycompilerconfig.groovy')

sourceSets {

}

idea {
    module {

    }
}

dependencies {
    compile gradleApi()
	compile localGroovy()

	compile "org.eclipse.jetty:jetty-jndi:${jettyVersion}"
	compile "org.eclipse.jetty:jetty-annotations:${jettyVersion}"
	compile "org.eclipse.jetty:jetty-util:${jettyVersion}"
	compile "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
	compile "org.eclipse.jetty:jetty-plus:${jettyVersion}"
	compile "org.eclipse.jetty:jetty-jndi:${jettyVersion}"
	compile "org.eclipse.jetty:jetty-server:${jettyVersion}"
	compile "org.eclipse.jetty:jetty-annotations:${jettyVersion}"
	compile "org.eclipse.jetty.websocket:websocket-server:${jettyVersion}"
	compile "org.eclipse.jetty:jetty-jsp:${jettyVersion}"

	testCompile 'org.testng:testng:6.8.+'
	testCompile 'org.mockito:mockito-all:1.9.+'
}

test {
	useTestNG()

	testLogging.showStandardStreams = true

	// listen to events in the test execution lifecycle
	beforeTest { descriptor ->
		logger.lifecycle("Running test: " + descriptor)
	}
}

task sourceJar (type : Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

pluginBundle {
	website = 'https://github.com/dsvdsv/gradle-jetty-plugin'
	vcsUrl = 'https://github.com/dsvdsv/gradle-jetty-plugin'
	description = 'Gradle jetty plugin'
	tags = ['jetty',]

	plugins {
		jettyPlugin {
			id = 'com.dsvdsv.gradle.plugin'
			displayName = 'Gradle Jetty plugin'
		}
	}
}